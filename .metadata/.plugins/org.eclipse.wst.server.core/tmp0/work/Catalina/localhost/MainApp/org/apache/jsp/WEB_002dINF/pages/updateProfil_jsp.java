/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2020-05-27 13:58:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updateProfil_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      org.unibl.etf.beans.UserBean userBean = null;
      synchronized (session) {
        userBean = (org.unibl.etf.beans.UserBean) _jspx_page_context.getAttribute("userBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (userBean == null){
          throw new java.lang.InstantiationException("bean userBean not found within scope");
        }
      }
      out.write(" \r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>User profile</title>\r\n");
      out.write("\t<link href=\"styles/style.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://kit.fontawesome.com/8b41a163ea.js\"></script>\r\n");
      out.write("\t<script src=\"scripts/updateUserProfile.js\"></script>\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"init()\">\r\n");
      out.write("\t<!-- \r\n");
      out.write("\tHTML forms provide three methods of encoding.\r\n");
      out.write("\r\n");
      out.write("    application/x-www-form-urlencoded (the default)\r\n");
      out.write("    multipart/form-data\r\n");
      out.write("    text/plain\r\n");
      out.write("        \r\n");
      out.write("    use multipart/form-data when your form includes any <input type=\"file\"> elements\r\n");
      out.write("    otherwise you can use multipart/form-data or application/x-www-form-urlencoded but application/x-www-form-urlencoded will be more efficient\r\n");
      out.write("    \r\n");
      out.write("    multipart/form-data is significantly more complicated but it allows entire files to be included in the data.\r\n");
      out.write("    text/plain is introduced by HTML 5 and is useful only for debugging\r\n");
      out.write("\t\r\n");
      out.write("\t -->\r\n");
      out.write("\t<form method=\"POST\" action=\"?action=updateProfil\" enctype=\"multipart/form-data\" > <!-- multipart/form-data naglasiti u servletu da kroz request saljes fajl :S  https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet -->\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t");
	out.println("<input type='text' class='form-control' id='username' maxlength='100' name='username' hidden='true' value='"+userBean.getUser().getUsername()+"'>"); 	
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t<label class=\"label control-label\" >First Name</label>\r\n");
      out.write("\t\t\t");
	out.println("<input type='text' class='form-control' id='firstName' required='required' maxlength='100' name='firstName' value='"+userBean.getUser().getFirstName()+"'>"); 	
      out.write("\r\n");
      out.write("\t\t\t<label class=\"label control-label\">Last Name</label>\t\t\t\r\n");
      out.write("\t\t\t");
 	out.println("<input type='text' class='form-control' id='lastName' name='lastName' required='required' maxlength='100' value='"+userBean.getUser().getLastName()+"' >"); 	
      out.write("\r\n");
      out.write("\t\t\t<label class=\"label control-label\">Email</label>\r\n");
      out.write("\t\t\t");
 	out.println("<input type='text' class='form-control' id='email' name='email' required='required' value='"+userBean.getUser().getEmail()+"' >"); 	
      out.write("\r\n");
      out.write("\t\t\t<label class=\"label control-label\">Picture</label>\r\n");
      out.write("\t\t\t  <div class=\"custom-file\">\r\n");
      out.write("    \t\t\t<input type=\"file\" class=\"custom-file-input\" id=\"pictureFile\" name=\"pictureFile\">\r\n");
      out.write("    \t\t\t<label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose picture</label>\r\n");
      out.write(" \t\t\t </div> <br><br>\r\n");
      out.write(" \t\t\t \r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"custom-control custom-checkbox\">\r\n");
      out.write("  \t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"emergencyNotification\" name=\"emergencyNotification\" checked>\r\n");
      out.write("  \t\t\t<label class=\"custom-control-label\" for=\"emergencyNotification\">Emergency notification</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Sign Up</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t<label class=\"label control-label\">Country</label>\r\n");
      out.write("\t\t\t<select class=\"form-control\" id=\"country\" name=\"country\"  required=\"required\">\r\n");
      out.write("\t\t\t<option value=\"\" selected disabled hidden>Choose here</option>\r\n");
      out.write("\t\t\t</select>\t\t\r\n");
      out.write("\t\t\t<label class=\"label control-label\">Region</label>\r\n");
      out.write("\t\t\t<select class=\"form-control\" id=\"region\" name=\"region\"  required=\"required\">\r\n");
      out.write("\t\t\t<option value=\"\" selected disabled hidden>Choose here</option>\r\n");
      out.write("\t\t\t</select>\t\t\t\r\n");
      out.write("\t\t\t<label class=\"label control-label\">City</label>\r\n");
      out.write("\t\t\t<select class=\"form-control\" id=\"city\" name=\"city\"  required=\"required\">\r\n");
      out.write("\t\t\t<option value=\"\" selected disabled hidden>Choose here</option>\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("\t\t\t<div class=\"container\">     \r\n");
      out.write("  \t\t\t<img class=\"userProfilePicture\" id=\"userProfilePicture\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWRolIN3VPIBYPi8lhOfMwbCYfy0ez7cgIyeR1qJFrO0OAKd-3&usqp=CAU\" class=\"img-thumbnail\" alt=\"Profile picture\"> \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<label class=\"label control-label\" hidden=\"true\">Country FLAG</label>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"countryFlag\" name=\"countryFlag\" hidden=\"true\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div> \r\n");
      out.write("\t\t\t\t \t");

						if(session != null && (session.getAttribute("notification") != null)){
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"alert alert-info\" role=\"alert\" style=\"text-align: center; bottom: 0px;\">\r\n");
      out.write("\t\t\t\t\t");

							out.print(session.getAttribute("notification"));
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");
 
					}
					
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
